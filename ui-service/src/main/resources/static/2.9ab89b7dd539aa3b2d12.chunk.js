webpackJsonp([2,6],{794:function(t,e,n){"use strict";var o=n(0),i=n(798),r=n(803),c=n(436);n.d(e,"CrudModule",function(){return a});var s=this&&this.__decorate||function(t,e,n,o){var i,r=arguments.length,c=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(t,e,n,o);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(c=(r<3?i(c):r>3?i(e,n,c):i(e,n))||c);return r>3&&c&&Object.defineProperty(e,n,c),c},d=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},a=function(){function t(){}return t=s([n.i(o.u)({imports:c.a.concat([r.a]),declarations:[i.a]}),d("design:paramtypes",[])],t)}()},798:function(t,e,n){"use strict";var o=n(0),i=n(83),r=n(52);n.d(e,"a",function(){return d});var c=this&&this.__decorate||function(t,e,n,o){var i,r=arguments.length,c=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(t,e,n,o);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(c=(r<3?i(c):r>3?i(e,n,c):i(e,n))||c);return r>3&&c&&Object.defineProperty(e,n,c),c},s=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},d=function(){function t(t,e){this.http=t,this.authService=e,this.posts=[],this.editing=!1,this.editedPost=null}return t.prototype.ngOnInit=function(){console.log("hello `Crud` component"),this.fetchPosts()},t.prototype.editPost=function(t){this.editing=!0,this.editedPost=JSON.parse(JSON.stringify(t)),this.scrollToTop()},t.prototype.newPost=function(){this.editing=!0,this.editedPost={id:null,title:"",content:"",createdDate:null,updatedDate:null,version:null,createdBy:null,updatedBy:null}},t.prototype.removePost=function(t){this.deletePost(t)},t.prototype.cancelEdit=function(){this.editing=!1,this.editedPost=null,this.scrollToTop()},t.prototype.refresh=function(){this.cancelEdit(),this.fetchPosts()},t.prototype.fetchPosts=function(){var t=this;this.http.get("/api/posts/",{headers:this.authService.getAuthorizationHeaders()}).subscribe(function(e){t.posts=e.json()},function(t){return console.log("Something went wrong")})},t.prototype.savePost=function(t){var e=this;this.http.post("/api/posts/",t,{headers:this.authService.getAuthorizationHeaders()}).subscribe(function(t){console.log("Saved",t.json()),e.updateOrAddPostToList(t.json())},function(t){return console.log("Something went wrong")})},t.prototype.deletePost=function(t){var e=this;this.http.delete("/api/posts/"+t.id,{headers:this.authService.getAuthorizationHeaders()}).subscribe(function(n){console.log("Removed",n.json()),e.removePostFromList(t)},function(t){return console.log("Something went wrong")})},t.prototype.removePostFromList=function(t){this.posts=this.posts.filter(function(e,n,o){return e.id!==t.id}),this.cancelEdit()},t.prototype.updateOrAddPostToList=function(t){var e=this,n=this.posts.filter(function(e,n,o){return e.id===t.id});0===n.length?this.posts.push(t):n.forEach(function(n){var o=e.posts.indexOf(n);e.posts[o]=t}),this.cancelEdit()},t.prototype.scrollToTop=function(){var t=document.querySelector("md-sidenav-layout > md-content");t&&this.scrollTo(t,0,100)},t.prototype.scrollTo=function(t,e,n){var o=this;if(!(n<=0)){var i=e-t.scrollTop,r=i/n*10;setTimeout(function(){t.scrollTop=t.scrollTop+r,t.scrollTop!==e&&o.scrollTo(t,e,n-10)},10)}},t=c([n.i(o.v)({selector:"shardis-crud",template:n(817),styles:[n(811)]}),s("design:paramtypes",["function"==typeof(e="undefined"!=typeof i.a&&i.a)&&e||Object,"function"==typeof(d="undefined"!=typeof r.a&&r.a)&&d||Object])],t);var e,d}()},803:function(t,e,n){"use strict";var o=n(82),i=n(798),r=n(435);n.d(e,"a",function(){return a});var c=this&&this.__decorate||function(t,e,n,o){var i,r=arguments.length,c=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(t,e,n,o);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(c=(r<3?i(c):r>3?i(e,n,c):i(e,n))||c);return r>3&&c&&Object.defineProperty(e,n,c),c},s=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},d=[{path:"",pathMatch:"full",component:i.a}],a=function(){function t(){}return t=c([n.i(r.a)({imports:[o.a.forChild(d)],exports:[o.a],providers:[]}),s("design:paramtypes",[])],t)}()},811:function(t,e){t.exports=".postcard {\n  margin: 10px 10px; }\n\nform > md-input {\n  width: 100%; }\n\n.md-hint {\n  height: 1.5em; }\n"},817:function(t,e){t.exports='<md-toolbar align="end">\n  <button md-raised-button color="primary" (click)="newPost()">new post</button>\n  <button md-raised-button color="secondary" (click)="refresh()">refresh</button>\n</md-toolbar>\n<md-card *ngIf="editing">\n  <md-card-title>Editing post</md-card-title>\n  <md-card-content>\n    <form #editPostForm="ngForm">\n      <md-input placeholder="Title" [(ngModel)]="editedPost.title" name="title" maxLength="100" required="required"\n                #titleField>\n        <md-hint align="end">{{titleField.characterCount}} / 100</md-hint>\n      </md-input>\n      <md-input rows="3" type="Content" placeholder="Content" [(ngModel)]="editedPost.content" name="content"\n                maxLength="255" required="required" #contentField>\n        <md-hint align="end">{{contentField.characterCount}} / 255</md-hint>\n      </md-input>\n    </form>\n  </md-card-content>\n  <md-card-actions align="end">\n    <button md-raised-button color="accent" (click)="savePost(editedPost)">save</button>\n    <button md-raised-button color="primary" (click)="cancelEdit()">cancel</button>\n  </md-card-actions>\n</md-card>\n<md-card *ngFor="let post of posts" class="postcard">\n  <md-card-title>{{post.title}}</md-card-title>\n  <md-card-content>\n    <p>{{post.content}}</p>\n    <md-list>\n      <md-list-item>\n        <p md-line>id: {{post.id}}</p>\n        <p md-line>createdDate: {{post.createdDate | date:"dd.MM.yyyy HH:mm"}}</p>\n        <p md-line>updatedDate: {{post.createdDate | date:"dd.MM.yyyy HH:mm"}}</p>\n        <p md-line>version: {{post.version}}</p>\n      </md-list-item>\n    </md-list>\n  </md-card-content>\n  <md-card-actions align="end">\n    <button md-raised-button color="primary" (click)="editPost(post)">edit</button>\n    <button md-raised-button color="accent" (click)="removePost(post)">remove</button>\n  </md-card-actions>\n</md-card>\n'}});