{"version":3,"sources":["webpack:///C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud.module.ts","webpack:///C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud.component.ts","webpack:///C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud-routing.module.ts","webpack:///C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud.component.scss","webpack:///C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud.component.html"],"names":[],"mappings":"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","file":"2.chunk.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CrudComponent} from './crud.component';\nimport {CrudRoutingModule} from './crud-routing.module';\nimport {COMMON_CHILD_MODULES} from '../shared/common/common.modules';\n\n@NgModule({\n  imports: [\n    ...COMMON_CHILD_MODULES,\n    CrudRoutingModule\n  ],\n  declarations: [CrudComponent]\n})\nexport class CrudModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/~/angular2-template-loader!C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud.module.ts","/* tslint:disable:no-unused-variable */\nimport {Component, OnInit} from '@angular/core';\nimport {Http} from '@angular/http';\nimport {AuthService} from '../shared/auth/auth.service';\n\n@Component({\n  selector: 'shardis-crud',\n  template: require('./crud.component.html'),\n  styles: [require('./crud.component.scss')]\n})\nexport class CrudComponent implements OnInit {\n\n  posts: BlogPost[] = [];\n\n  editing: boolean = false;\n  editedPost: BlogPost = null;\n\n  constructor(public http: Http, public authService: AuthService) {\n  }\n\n\n  ngOnInit(): any {\n    console.log('hello `Crud` component');\n    this.fetchPosts();\n  }\n\n  public editPost(post: BlogPost) {\n    this.editing = true;\n    this.editedPost = JSON.parse(JSON.stringify(post));\n    this.scrollToTop();\n  }\n\n  public newPost() {\n    this.editing = true;\n    this.editedPost = {\n      id: null,\n      title: '',\n      content: '',\n      createdDate: null,\n      updatedDate: null,\n      version: null,\n      createdBy: null,\n      updatedBy: null,\n    };\n  }\n\n  public removePost(post: BlogPost) {\n    this.deletePost(post);\n  }\n\n  public cancelEdit() {\n    this.editing = false;\n    this.editedPost = null;\n    this.scrollToTop();\n  }\n\n  public refresh() {\n    this.cancelEdit();\n    this.fetchPosts();\n  }\n\n  private fetchPosts() {\n    this.http.get('/api/posts/', {headers: this.authService.getAuthorizationHeaders()})\n      .subscribe(\n        data => {\n          this.posts = data.json();\n        },\n        err => console.log('Something went wrong')\n      );\n  }\n\n  private savePost(post: BlogPost) {\n    this.http.post(`/api/posts/`, post, {headers: this.authService.getAuthorizationHeaders()})\n      .subscribe(\n        data => {\n          console.log('Saved', data.json());\n          this.updateOrAddPostToList(data.json());\n        },\n        err => console.log('Something went wrong')\n      );\n  }\n\n  private deletePost(post: BlogPost) {\n    this.http.delete(`/api/posts/${post.id}`, {headers: this.authService.getAuthorizationHeaders()})\n      .subscribe(\n        data => {\n          console.log('Removed', data.json());\n          this.removePostFromList(post);\n        },\n        err => console.log('Something went wrong')\n      );\n  }\n\n  private removePostFromList(post: BlogPost) {\n    this.posts = this.posts.filter((x, idx, obs) => x.id !== post.id);\n    this.cancelEdit();\n  }\n\n  private updateOrAddPostToList(post: BlogPost) {\n    let changedList: BlogPost[] = this.posts.filter((x, idx, obs) => x.id === post.id);\n    if (changedList.length === 0) {\n      this.posts.push(post);\n    } else {\n      changedList.forEach((x) => {\n        let index = this.posts.indexOf(x);\n        this.posts[index] = post;\n      });\n    }\n    this.cancelEdit();\n  }\n\n  private scrollToTop() {\n    let contentEl = document.querySelector('md-sidenav-layout > md-content');\n    if (contentEl) {\n      this.scrollTo(contentEl, 0, 100);\n    }\n  }\n\n  private scrollTo(element, to, duration) {\n    if (duration <= 0) {\n      return;\n    }\n    let difference = to - element.scrollTop;\n    let perTick = difference / duration * 10;\n\n    setTimeout(() => {\n      element.scrollTop = element.scrollTop + perTick;\n      if (element.scrollTop === to) {\n        return;\n      }\n      this.scrollTo(element, to, duration - 10);\n    }, 10);\n  }\n\n}\n\nexport interface BlogPost {\n  id: number;\n  uuid?: string;\n  title: string;\n  content: string;\n  createdDate: Date;\n  updatedDate: Date;\n  version: number;\n  createdBy: any;\n  updatedBy: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/~/angular2-template-loader!C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud.component.ts","import {Routes, RouterModule} from '@angular/router';\nimport {CrudComponent} from './crud.component';\nimport {NgModule} from '@angular/core/src/metadata/ng_module';\n\n\nexport const routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: CrudComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class CrudRoutingModule {\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/~/angular2-template-loader!C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud-routing.module.ts","module.exports = \".postcard {\\n  margin: 10px 10px; }\\n\\nform > md-input {\\n  width: 100%; }\\n\\n.md-hint {\\n  height: 1.5em; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud.component.scss\n// module id = 811\n// module chunks = 2","module.exports = \"<md-toolbar align=\\\"end\\\">\\n  <button md-raised-button color=\\\"primary\\\" (click)=\\\"newPost()\\\">new post</button>\\n  <button md-raised-button color=\\\"secondary\\\" (click)=\\\"refresh()\\\">refresh</button>\\n</md-toolbar>\\n<md-card *ngIf=\\\"editing\\\">\\n  <md-card-title>Editing post</md-card-title>\\n  <md-card-content>\\n    <form #editPostForm=\\\"ngForm\\\">\\n      <md-input placeholder=\\\"Title\\\" [(ngModel)]=\\\"editedPost.title\\\" name=\\\"title\\\" maxLength=\\\"100\\\" required=\\\"required\\\"\\n                #titleField>\\n        <md-hint align=\\\"end\\\">{{titleField.characterCount}} / 100</md-hint>\\n      </md-input>\\n      <md-input rows=\\\"3\\\" type=\\\"Content\\\" placeholder=\\\"Content\\\" [(ngModel)]=\\\"editedPost.content\\\" name=\\\"content\\\"\\n                maxLength=\\\"255\\\" required=\\\"required\\\" #contentField>\\n        <md-hint align=\\\"end\\\">{{contentField.characterCount}} / 255</md-hint>\\n      </md-input>\\n    </form>\\n  </md-card-content>\\n  <md-card-actions align=\\\"end\\\">\\n    <button md-raised-button color=\\\"accent\\\" (click)=\\\"savePost(editedPost)\\\">save</button>\\n    <button md-raised-button color=\\\"primary\\\" (click)=\\\"cancelEdit()\\\">cancel</button>\\n  </md-card-actions>\\n</md-card>\\n<md-card *ngFor=\\\"let post of posts\\\" class=\\\"postcard\\\">\\n  <md-card-title>{{post.title}}</md-card-title>\\n  <md-card-content>\\n    <p>{{post.content}}</p>\\n    <md-list>\\n      <md-list-item>\\n        <p md-line>id: {{post.id}}</p>\\n        <p md-line>createdDate: {{post.createdDate | date:\\\"dd.MM.yyyy HH:mm\\\"}}</p>\\n        <p md-line>updatedDate: {{post.createdDate | date:\\\"dd.MM.yyyy HH:mm\\\"}}</p>\\n        <p md-line>version: {{post.version}}</p>\\n      </md-list-item>\\n    </md-list>\\n  </md-card-content>\\n  <md-card-actions align=\\\"end\\\">\\n    <button md-raised-button color=\\\"primary\\\" (click)=\\\"editPost(post)\\\">edit</button>\\n    <button md-raised-button color=\\\"accent\\\" (click)=\\\"removePost(post)\\\">remove</button>\\n  </md-card-actions>\\n</md-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/romeo/Documents/git/spring-angular2-starter/ui-service/src/main/frontend/app/crud/crud.component.html\n// module id = 817\n// module chunks = 2"],"sourceRoot":""}